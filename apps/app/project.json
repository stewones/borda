{
  "name": "app",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "apps/app/src",
  "prefix": "borda",
  "tags": ["consumer"],
  "targets": {
    "build": {
      "executor": "@nx/angular:browser-esbuild",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/app",
        "index": "apps/app/src/index.html",
        "main": "apps/app/src/main.ts",
        "tsConfig": "apps/app/tsconfig.app.json",
        "inlineStyleLanguage": "scss",
        "assets": [
          "apps/app/src/favicon.ico",
          "apps/app/src/assets",
          "apps/app/src/server.ts",
          "apps/app/src/manifest.json"
        ],
        "styles": ["apps/app/src/styles.css"],
        "scripts": [],
        "webWorkerTsConfig": "apps/app/tsconfig.worker.json",
        "serviceWorker": true,
        "ngswConfigPath": "apps/app/ngsw-config.json"
      },
      "configurations": {
        "production": {
          "fileReplacements": [
            {
              "replace": "apps/app/src/environment/index.ts",
              "with": "apps/app/src/environment/production.ts"
            }
          ],
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "500kb",
              "maximumError": "1mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "2kb",
              "maximumError": "4kb"
            }
          ],
          "outputHashing": "all"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "development"
    },
    "serve": {
      "executor": "@nx/angular:dev-server",
      "configurations": {
        "production": {
          "buildTarget": "app:build:production"
        },
        "development": {
          "buildTarget": "app:build:development"
        }
      },
      "defaultConfiguration": "development"
    },
    "extract-i18n": {
      "executor": "@nx/angular:extract-i18n",
      "options": {
        "buildTarget": "app:build"
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "apps/app/jest.config.ts",
        "webWorkerTsConfig": "apps/app/tsconfig.worker.json"
      }
    },
    "bundle": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx build app --configuration=production",
          "docker build -f ./apps/app/Dockerfile -t insta-app ./dist/apps/app"
        ],
        "parallel": false
      }
    },
    "preview": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "docker network create insta-net || true",
          "docker rm -f insta-app || true",
          "docker run -p 4201:3000 -d --network insta-net --name insta-app insta-app"
        ],
        "parallel": false
      }
    },
    "preview.dev": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx build app --configuration=development",
          "bunx angular-http-server --path dist/apps/app -p 4220"
        ],
        "parallel": false
      }
    },
    "deploy": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx env.lock app",
          "nx build app --prod",
          "nx env.unlock app",
          "kamal deploy -c apps/app/deploy.yml"
        ],
        "parallel": false
      }
    },
    "redeploy": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx env.lock app",
          "nx build app --configuration=production",
          "nx env.unlock app",
          "kamal redeploy -c apps/app/deploy.yml"
        ],
        "parallel": false
      }
    },

    "env.lock": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "cp -rf ./apps/app/src/environment/index.ts ./apps/app/src/environment/index.lock.ts",
          "cp -rf ./apps/app/src/environment/production.ts ./apps/app/src/environment/index.ts"
        ],
        "parallel": false
      }
    },
    "env.unlock": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "cp -rf ./apps/app/src/environment/index.lock.ts ./apps/app/src/environment/index.ts",
          "rm -rf ./apps/app/src/environment/index.lock.ts"
        ],
        "parallel": false
      }
    },
    "logs": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["kamal app logs -c apps/app/deploy.yml"],
        "parallel": false
      }
    }
  }
}
